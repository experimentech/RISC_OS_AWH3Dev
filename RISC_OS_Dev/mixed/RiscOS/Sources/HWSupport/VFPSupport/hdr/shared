; 
; Copyright (c) 2014, RISC OS Open Ltd
; All rights reserved.
; 
; Redistribution and use in source and binary forms, with or without
; modification, are permitted provided that the following conditions are met: 
;     * Redistributions of source code must retain the above copyright
;       notice, this list of conditions and the following disclaimer.
;     * Redistributions in binary form must reproduce the above copyright
;       notice, this list of conditions and the following disclaimer in the
;       documentation and/or other materials provided with the distribution.
;     * Neither the name of RISC OS Open Ltd nor the names of its contributors
;       may be used to endorse or promote products derived from this software
;       without specific prior written permission.
; 
; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
; POSSIBILITY OF SUCH DAMAGE.
; 

OldOpt  SETA    {OPT}
        OPT     OptNoList+OptNoP1List

; Private header containing definitions that are shared with C code via Hdr2H

; Layout of the exception processing workspace
                  ^ 0
XCRelocOffset     # 4 ; C relocation offset - must be at the start
RoundingMode      # 1 ; FPSCR rounding mode field
XFlags            # 1 ; Extra flags about the exception
ExceptionFlags    # 1 ; FPSCR cumulative exception flags
ExceptionEnable   # 1 ; FPSCR trapped exception enable flags
Reg_D             # 4 ; Operand and result register numbers (*2 for D regs)
Reg_N             # 4
Reg_M             # 4
TheInstruction    # 4 ; Instruction word being manipulated
TheFPEXC          # 4 ; FPEXC being manipulated
TheContext        # 4 ; Pointer to context being manipulated
Workspace         # 4 ; Module workspace pointer
UserRegisters     # 64 ; R0-R15 for the caller's mode (assuming not FIQ)
UserPSR           # 4 ; SPSR on entry

        ASSERT    ?UserRegisters = 16*4 ; Hdr2H doesn't do maths

; Flags for use by classify() to indicate the class of a given instruction 

CLASS_NOT_VFP   * 1    ; Not a VFP instruction
CLASS_NOT_CDP   * 2    ; Is VFP, but not a VFP CDP instruction (i.e. not
                       ; to be emulated by us)
CLASS_VFP3      * 4    ; VFPv3 required
CLASS_VFP4      * 8    ; VFPv4 required
CLASS_S         * 16   ; Single precision support required
CLASS_D         * 32   ; Double precision support required
CLASS_D32       * 64   ; D32 support required
CLASS_HP        * 128  ; Half precision support required
CLASS_SQRT      * 256  ; Square root support required
CLASS_DIV       * 512  ; Divide support required

; Special register numbers

REG_FPSID       * 0
REG_FPSCR       * 1
REG_MVFR1       * 6
REG_MVFR0       * 7
REG_FPEXC       * 8
REG_FPINST      * 9
REG_FPINST2     * 10

        OPT     OldOpt
        END

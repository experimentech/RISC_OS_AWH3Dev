; This source code in this file is licensed to You by Castle Technology
; Limited ("Castle") and its licensors on contractual terms and conditions
; ("Licence") which entitle you freely to modify and/or to distribute this
; source code subject to Your compliance with the terms of the Licence.
;
; This source code has been made available to You without any warranties
; whatsoever. Consequently, Your use, modification and distribution of this
; source code is entirely at Your own risk and neither Castle, its licensors
; nor any other person who has contributed to this source code shall be
; liable to You for any loss or damage which You may suffer as a result of
; Your use, modification or distribution of this source code.
;
; Full details of Your rights and obligations are set out in the Licence.
; You should have received a copy of the Licence with this source code file.
; If You have not received a copy, the text of the Licence is available
; online at www.castle-technology.co.uk/riscosbaselicence.htm
;
;/*
; * Copyright (c) 2011-2012, Freescale Semiconductor, Inc.
; * All rights reserved.
; *
; * Redistribution and use in source and binary forms, with or without modification,
; * are permitted provided that the following conditions are met:
; *
; * o Redistributions of source code must retain the above copyright notice, this list
; *   of conditions and the following disclaimer.
; *
; * o Redistributions in binary form must reproduce the above copyright notice, this
; *   list of conditions and the following disclaimer in the documentation and/or
; *   other materials provided with the distribution.
; *
; * o Neither the name of Freescale Semiconductor, Inc. nor the names of its
; *   contributors may be used to endorse or promote products derived from this
; *   software without specific prior written permission.
; *
; * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
; * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
; * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
; * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
; * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
; * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
; * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
; * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
; * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
; * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
; */

        [       :LNOT: :DEF: __HAL_SOC_MEMORY_MAP__
        GBLL    __HAL_SOC_MEMORY_MAP__

BAAD_STATUS             *       0xbaadbaad
GOOD_STATUS             *       0x900d900d

; overall regions
CPU_IOBase              *       0x00000000
CPU_IOBaseSize          *       0x00d00000
PCIe_Base               *       0x01000000
PCIe_BaseSize           *       0x01000000
Main_IOBase             *       0x02000000
Main_IOBaseSize         *       0x00c00000
EIM_Base                *       0x08000000
EIM_BaseSize            *       0x08000000

; CPU Memory Map
MMDC1_BASE_ADDR         *       0x10000000
MMDC1_END_ADDR          *       0x7FFFFFFF
MMDC0_BASE_ADDR         *       0x80000000
MMDC0_END_ADDR          *       0xFFFFFFFF
OCRAM_BASE_ADDR         *       0x00900000
OCRAM_END_ADDR          *       0x009FFFFF
IRAM_BASE_ADDR          *       OCRAM_BASE_ADDR
PCIE_BASE_ADDR          *       0x01000000
PCIE_END_ADDR           *       0x01FFFFFF

ROMCP_ARB_BASE_ADDR     *       0x00000000
ROMCP_ARB_END_ADDR      *       0x000FFFFF
BOOT_ROM_BASE_ADDR      *       ROMCP_ARB_BASE_ADDR
CAAM_SEC_RAM_START_ADDR *       0x00100000
CAAM_SEC_RAM_END_ADDR   *       0x00103FFF
GPMI_BASE_ADDR          *       0x00112000
APBH_DMA_BASE_ADDR      *       0x00110000
APBH_DMA_END_ADDR       *       0x00117FFF
HDMI_BASE_ADDR          *       0x00120000
HDMI_END_ADDR           *       0x00128FFF
GPU_3D_BASE_ADDR        *       0x00130000
GPU_3D_END_ADDR         *       0x00133FFF
GPU_2D_BASE_ADDR        *       0x00134000
GPU_2D_END_ADDR         *       0x00137FFF
DTCP_BASE_ADDR          *       0x00138000
DTCP_END_ADDR           *       0x0013BFFF
GPU_MEM_BASE_ADDR       *       GPU_3D_BASE_ADDR

PL310_BASE_ADDR         *       0x00a02000

GPV0_BASE_ADDR          *       0x00B00000
GPV1_BASE_ADDR          *       0x00C00000
GPV2_BASE_ADDR          *       0x00200000
GPV3_BASE_ADDR          *       0x00300000
GPV4_BASE_ADDR          *       0x00800000

AIPS1_ARB_BASE_ADDR     *       0x02000000
AIPS1_ARB_END_ADDR      *       0x020FFFFF
AIPS2_ARB_BASE_ADDR     *       0x02100000
AIPS2_ARB_END_ADDR      *       0x021FFFFF
SATA_BASE_ADDR          *       0x02200000
SATA_END_ADDR           *       0x02203FFF
OPENVG_BASE_ADDR        *       0x02204000
OPENVG_END_ADDR         *       0x02207FFF
HSI_BASE_ADDR           *       0x02208000
HSI_END_ADDR            *       0x0220BFFF
IPU1_BASE_ADDR          *       0x02400000
IPU1_END_ADDR           *       0x027FFFFF
IPU2_BASE_ADDR          *       0x02800000
IPU2_END_ADDR           *       0x02BFFFFF
WEIM_CS_BASE_ADDR       *       0x08000000
WEIM_CS_END_ADDR        *       0x0FFFFFFF

; CoreSight (ARM Debug)
DEBUG_ROM_BASE_ADDR     *       0x02140000
ETB_BASE_ADDR           *       0x02141000
EXT_CTI_BASE_ADDR       *       0x02142000
TPIU_BASE_ADDR          *       0x02143000
FUNNEL_BASE_ADDR        *       0x02144000
CORTEX_ROM_TABLE        *       0x0214F000
CORTEX_DEBUG_UNIT       *       0x02150000
CORE0_DEBUG_UNIT        *       0x02150000
PMU0_BASE_ADDR          *       0x02151000
CORE1_DEBUG_UNIT        *       0x02152000
PMU1_BASE_ADDR          *       0x02153000
CORE2_DEBUG_UNIT        *       0x02154000
PMU2_BASE_ADDR          *       0x02155000
CORE3_DEBUG_UNIT        *       0x02156000
PMU3_BASE_ADDR          *       0x02157000
CTI0_BASE_ADDR          *       0x02158000
CTI1_BASE_ADDR          *       0x02159000
CTI2_BASE_ADDR          *       0x0215A000
CTI3_BASE_ADDR          *       0x0215B000
PTM0_BASE_ADDR          *       0x0215C000
PTM_BASE_ADDR           *       0x0215C000
PTM1_BASE_ADDR          *       0x0215D000
PTM2_BASE_ADDR          *       0x0215E000
PTM3_BASE_ADDR          *       0x0215F000

AIPS_TZ1_BASE_ADDR      *       AIPS1_ARB_BASE_ADDR
AIPS_TZ2_BASE_ADDR      *       AIPS2_ARB_BASE_ADDR

SPDIF_BASE_ADDR         *       (AIPS_TZ1_BASE_ADDR+0x04000)    ;slot 1
ECSPI1_BASE_ADDR        *       (AIPS_TZ1_BASE_ADDR+0x08000)    ;slot 2
ECSPI2_BASE_ADDR        *       (AIPS_TZ1_BASE_ADDR+0x0C000)    ;slot 3
ECSPI3_BASE_ADDR        *       (AIPS_TZ1_BASE_ADDR+0x10000)    ;slot 4
ECSPI4_BASE_ADDR        *       (AIPS_TZ1_BASE_ADDR+0x14000)    ;slot 5
ECSPI5_BASE_ADDR        *       (AIPS_TZ1_BASE_ADDR+0x18000)    ;slot 6
UART1_BASE_ADDR         *       (AIPS_TZ1_BASE_ADDR+0x20000)    ;slot 8
ESAI1_BASE_ADDR         *       (AIPS_TZ1_BASE_ADDR+0x24000)    ;slot 9
SSI1_BASE_ADDR          *       (AIPS_TZ1_BASE_ADDR+0x28000)    ;slot 10
SSI2_BASE_ADDR          *       (AIPS_TZ1_BASE_ADDR+0x2C000)    ;slot 11
SSI3_BASE_ADDR          *       (AIPS_TZ1_BASE_ADDR+0x30000)    ;slot 12
ASRC_BASE_ADDR          *       (AIPS_TZ1_BASE_ADDR+0x34000)    ;slot 13
SPBA_BASE_ADDR          *       (AIPS_TZ1_BASE_ADDR+0x3C000)    ;slot 15
VPU_BASE_ADDR           *       (AIPS_TZ1_BASE_ADDR+0x40000)    ;slot 33, global en[1], til 0x7BFFF

AIPS1_ON_BASE_ADDR      *       (AIPS_TZ1_BASE_ADDR+0x7C000)
AIPS1_OFF_BASE_ADDR     *       (AIPS_TZ1_BASE_ADDR+0x80000)

PWM1_BASE_ADDR          *       (AIPS1_OFF_BASE_ADDR+0x0000)
PWM2_BASE_ADDR          *       (AIPS1_OFF_BASE_ADDR+0x4000)
PWM3_BASE_ADDR          *       (AIPS1_OFF_BASE_ADDR+0x8000)
PWM4_BASE_ADDR          *       (AIPS1_OFF_BASE_ADDR+0xC000)
CAN1_BASE_ADDR          *       (AIPS1_OFF_BASE_ADDR+0x10000)
CAN2_BASE_ADDR          *       (AIPS1_OFF_BASE_ADDR+0x14000)
GPT_BASE_ADDR           *       (AIPS1_OFF_BASE_ADDR+0x18000)
GPIO1_BASE_ADDR         *       (AIPS1_OFF_BASE_ADDR+0x1C000)
GPIO2_BASE_ADDR         *       (AIPS1_OFF_BASE_ADDR+0x20000)
GPIO3_BASE_ADDR         *       (AIPS1_OFF_BASE_ADDR+0x24000)
GPIO4_BASE_ADDR         *       (AIPS1_OFF_BASE_ADDR+0x28000)
GPIO5_BASE_ADDR         *       (AIPS1_OFF_BASE_ADDR+0x2C000)
GPIO6_BASE_ADDR         *       (AIPS1_OFF_BASE_ADDR+0x30000)
GPIO7_BASE_ADDR         *       (AIPS1_OFF_BASE_ADDR+0x34000)
KPP_BASE_ADDR           *       (AIPS1_OFF_BASE_ADDR+0x38000)
WDOG1_BASE_ADDR         *       (AIPS1_OFF_BASE_ADDR+0x3C000)
WDOG2_BASE_ADDR         *       (AIPS1_OFF_BASE_ADDR+0x40000)
CCM_BASE_ADDR           *       (AIPS1_OFF_BASE_ADDR+0x44000)
CCM_ANALOG_BASE_ADDR    *       (AIPS1_OFF_BASE_ADDR+0x48000)
IP2APB_USBPHY1_BASE_ADDR *      (AIPS1_OFF_BASE_ADDR+0x49000)
IP2APB_USBPHY2_BASE_ADDR *      (AIPS1_OFF_BASE_ADDR+0x4A000)
SNVS_BASE_ADDR          *       (AIPS1_OFF_BASE_ADDR+0x4C000)
EPIT1_BASE_ADDR         *       (AIPS1_OFF_BASE_ADDR+0x50000)
EPIT2_BASE_ADDR         *       (AIPS1_OFF_BASE_ADDR+0x54000)
SRC_BASE_ADDR           *       (AIPS1_OFF_BASE_ADDR+0x58000)
GPC_BASE_ADDR           *       (AIPS1_OFF_BASE_ADDR+0x5C000)
IOMUXC_BASE_ADDR        *       (AIPS1_OFF_BASE_ADDR+0x60000)
DCIC1_BASE_ADDR         *       (AIPS1_OFF_BASE_ADDR+0x64000)
DCIC2_BASE_ADDR         *       (AIPS1_OFF_BASE_ADDR+0x68000)
SDMA_BASE_ADDR          *       (AIPS1_OFF_BASE_ADDR+0x6C000)
SDMA_IPS_HOST_BASE_ADDR *       SDMA_BASE_ADDR

AIPS2_ON_BASE_ADDR      *       (AIPS_TZ2_BASE_ADDR+0x7C000)
AIPS2_OFF_BASE_ADDR     *       (AIPS_TZ2_BASE_ADDR+0x80000)

AIPS1_BASE_ADDR         *       AIPS1_ON_BASE_ADDR
AIPS2_BASE_ADDR         *       AIPS2_ON_BASE_ADDR

CAAM_BASE_ADDR          *       AIPS_TZ2_BASE_ADDR
ARM_IPS_BASE_ADDR       *       (AIPS_TZ2_BASE_ADDR+0x40000)

USBOH3_PL301_BASE_ADDR  *       (AIPS2_OFF_BASE_ADDR+0x0000)
USBOH3_USB_BASE_ADDR    *       (AIPS2_OFF_BASE_ADDR+0x4000)
ENET_BASE_ADDR          *       (AIPS2_OFF_BASE_ADDR+0x8000)
MLB_BASE_ADDR           *       (AIPS2_OFF_BASE_ADDR+0xC000)
USDHC1_BASE_ADDR        *       (AIPS2_OFF_BASE_ADDR+0x10000)
USDHC2_BASE_ADDR        *       (AIPS2_OFF_BASE_ADDR+0x14000)
USDHC3_BASE_ADDR        *       (AIPS2_OFF_BASE_ADDR+0x18000)
USDHC4_BASE_ADDR        *       (AIPS2_OFF_BASE_ADDR+0x1C000)
I2C1_BASE_ADDR          *       (AIPS2_OFF_BASE_ADDR+0x20000)
I2C2_BASE_ADDR          *       (AIPS2_OFF_BASE_ADDR+0x24000)
I2C3_BASE_ADDR          *       (AIPS2_OFF_BASE_ADDR+0x28000)
ROMCP_BASE_ADDR         *       (AIPS2_OFF_BASE_ADDR+0x2C000)
MMDC_P0_BASE_ADDR       *       (AIPS2_OFF_BASE_ADDR+0x30000)
MMDC_P1_BASE_ADDR       *       (AIPS2_OFF_BASE_ADDR+0x34000)
WEIM_BASE_ADDR          *       (AIPS2_OFF_BASE_ADDR+0x38000)
OCOTP_BASE_ADDR         *       (AIPS2_OFF_BASE_ADDR+0x3C000)
CSU_BASE_ADDR           *       (AIPS2_OFF_BASE_ADDR+0x40000)
PERFMON1_BASE_ADDR      *       (AIPS2_OFF_BASE_ADDR+0x44000)
PERFMON20c_40002_BASE_ADDR      *       (AIPS2_OFF_BASE_ADDR+0x48000)
PERFMON3_BASE_ADDR      *       (AIPS2_OFF_BASE_ADDR+0x4C000)
IP2APB_TZASC1_BASE_ADDR *       (AIPS2_OFF_BASE_ADDR+0x50000)
IP2APB_TZASC2_BASE_ADDR *       (AIPS2_OFF_BASE_ADDR+0x54000)
AUDMUX_BASE_ADDR        *       (AIPS2_OFF_BASE_ADDR+0x58000)
MIPI_CSI2_BASE_ADDR     *       (AIPS2_OFF_BASE_ADDR+0x5C000)
MIPI_DSI_BASE_ADDR      *       (AIPS2_OFF_BASE_ADDR+0x60000)
VDOA_BASE_ADDR          *       (AIPS2_OFF_BASE_ADDR+0x64000)
UART2_BASE_ADDR         *       (AIPS2_OFF_BASE_ADDR+0x68000)
UART3_BASE_ADDR         *       (AIPS2_OFF_BASE_ADDR+0x6C000)
UART4_BASE_ADDR         *       (AIPS2_OFF_BASE_ADDR+0x70000)
UART5_BASE_ADDR         *       (AIPS2_OFF_BASE_ADDR+0x74000)

; Cortex-A9 MPCore private memory region
ARM_PERIPHBASE          *        0x00A00000
SCU_BASE_ADDR           *        ARM_PERIPHBASE
IC_INTERFACES_BASE_ADDR *       (ARM_PERIPHBASE+0x0100)
GLOBAL_TIMER_BASE_ADDR  *       (ARM_PERIPHBASE+0x0200)
PRIVATE_TIMERS_WD_BASE_ADDR *   (ARM_PERIPHBASE+0x0600)
IC_DISTRIBUTOR_BASE_ADDR *      (ARM_PERIPHBASE+0x1000)

;Add from mx53 for ds90ur124.c
GPR_BASE_ADDR           *       (IOMUXC_BASE_ADDR + 0x0)
OBSRV_BASE_ADDR         *       (GPR_BASE_ADDR + 0x38)
SW_MUX_BASE_ADDR        *       (OBSRV_BASE_ADDR + 0x14)


; fuse store offsets for MAC address in OCOTP space
OCOTP_MAC_LOW_OFFSET    *       &620
OCOTP_MAC_HI_OFFSET     *       &630

        ] ;__HAL_SOC_MEMORY_MAP__

        END

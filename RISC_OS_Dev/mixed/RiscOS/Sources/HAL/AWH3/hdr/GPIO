;Copyright (c) 2018, Tristan Mumford
;All rights reserved.
;
;Redistribution and use in source and binary forms, with or without
;modification, are permitted provided that the following conditions are met:
;
;1. Redistributions of source code must retain the above copyright notice, this
;   list of conditions and the following disclaimer.
;2. Redistributions in binary form must reproduce the above copyright notice,
;   this list of conditions and the following disclaimer in the documentation
;   and/or other materials provided with the distribution.
;
;THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
;ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
;WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
;DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
;ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
;(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
;LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
;ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
;(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
;SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;
;The views and conclusions contained in the software and documentation are those
;of the authors and should not be interpreted as representing official policies,
;either expressed or implied, of the RISC OS project.


;PIO * &01C20800

;Tacking this junk in because I need it. The stuff below is meant to handle it.
PL_CFG0     *   &00
PL_DAT      *   &10
PL_DRV0     *   &14
PL_DRV1     *   &18
PL_PULL0    *   &1C
PL_PULL1    *   &20


;------------------
PORT_A      *   &00
PORT_B      *   &01
PORT_C      *   &02
PORT_D      *   &03
PORT_E      *   &04
PORT_F      *   &05
PORT_G      *   &06


;Going to manually calculate the offsets rather than apply them at runtime.
P0_CFG0     *   &00   ; n*0x24+0x00 ; 0?
P0_CFG1     *   &04
P0_CFG2     *   &08
P0_CFG3     *   &0C
;------
P1_CFG0     *   &24
P1_CFG1     *   &28
P1_CFG2     *   &2C
P1_CFG3     *   &30
;------
P2_CFG0     *   &48
P2_CFG1     *   &4C
P2_CFG2     *   &50
P2_CFG3     *   &54
;------
P3_CFG0     *   &6C
P3_CFG1     *   &70
P3_CFG2     *   &74
P3_CFG3     *   &78
;------
P4_CFG0     *   &90
P4_CFG1     *   &94
P4_CFG2     *   &98
P4_CFG3     *   &9C
;------
P5_CFG0     *   &B4
P5_CFG1     *   &B8
P5_CFG2     *   &BC
P5_CFG3     *   &C0
;------
P6_CFG0     *   &D8
P6_CFG1     *   &DC
P6_CFG2     *   &E0
P6_CFG3     *   &E4

;------------------

P0_DAT      *   &10
P1_DAT      *   &34
P2_DAT      *   &58
P3_DAT      *   &7C
P4_DAT      *   &A0
P5_DAT      *   &C4
P6_DAT      *   &E8

;------------------

P0_DRV0     *   &14
P0_DRV1     *   &18
;------
P1_DRV0     *   &38
P1_DRV1     *   &3C
;------
P2_DRV0     *   &5C
P2_DRV1     *   &60
;------
P3_DRV0     *   &80
P3_DRV1     *   &84
;------
P4_DRV0     *   &A4
P4_DRV1     *   &A8
;------
P5_DRV0     *   &C8
P5_DRV1     *   &CB
;------
P6_DRV0     *   &D8
P6_DRV1     *   &E0

;-------------------

P0_PUL0     *   &1C
P0_PUL1     *   &20
;------
P1_PUL0     *   &40
P1_PUL1     *   &44
;------
P2_PUL0     *   &64
P2_PUL1     *   &68
;------
P3_PUL0     *   &88
P3_PUL1     *   &8C
;------
P4_PUL0     *   &AC
P4_PUL1     *   &B0
;------
P5_PUL0     *   &D0
P5_PUL1     *   &D4
;------
P6_PUL0     *   &F4
P6_PUL1     *   &F8

;------------------

;ughhhhh 0x200+0*0x20+0x00
; &200 + 0 * &20 + &0
; &200 + 0 * &20 + &4 etc

; &200 + 1 * &20 + &0 blah blah

; &200 + (x * &20) + offset  maybe? Otherwise value of x is concerning.

PA_INT_CFG0 *	&200
PA_INT_CFG1 *	&204
PA_INT_CFG2 *   &208
PA_INT_CFG3 *	&20C
;------
PA_INT_CTL  *	&210
PA_INT_STA  *	&214
PA_INT_DEB  *	&218
;------
PG_INT_CFG0 *	&220
PG_INT_CFG1 *	&224
PG_INT_CFG2 *	&228
PG_INT_CFG3 *	&22C
;------
PG_INT_CTL  *	&230
PG_INT_STA  *	&234
PG_INT_DEB  *	&238

;------------------;
; Register values  ;
;------------------;

;THESE ARE VALUES FOR BIT POSITIONS.
;PA_CFG0_REG. Default value &77777777
;31 /
;30:28 R/W
PA7_SELECT  *	28
;fill in modes? It'll take /forever/
;27 /
;26:24
PA6_SELECT  *	24
;23 /
;22:20
PA5_SELECT  *   20
;blah blah
PA4_SELECT  *   16
PA3_SELECT  *   12
PA2_SELECT  *    8
PA1_SELECT  *    4
PA0_SELECT  *    0

;-----------------
;PA_CFG_1 REG
PA_15_SELECT *  28
PA_14_SELECT *  24
PA_13_SELECT *  20
PA_12_SELECT *  16
PA_11_SELECT *  12
PA_10_SELECT *   8
PA_9_SELECT  *   4
PA_8_SELECT  *   0

;-----------------
;PA_CFG2_REG
PA21_SELECT  *  20
PA20_SELECT  *  16
PA19_SELECT  *  12
PA18_SELECT  *   8
PA17_SELECT  *   4
PA16_SELECT  *   0

;-----------------
;PA_CFG3_REG
; - Oh. Nothing.

;-----------------
;PA_DATA_REG
PA_DAT       *  &3FFFFF ;21:0
;-----------------
;PA_DRV0_REG
;[2i+1:2i]
;(i=0~15)
;Oh come on!
;


    END


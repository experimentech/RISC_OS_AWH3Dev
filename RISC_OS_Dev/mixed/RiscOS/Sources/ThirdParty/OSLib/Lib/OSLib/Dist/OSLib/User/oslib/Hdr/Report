;Assembler header file for Report
;written by DefMod (Jan  2 2007) on Tue Jan  2 11:56:38 2007
;Philip Ludlam, philip@philipnet.com

        [       :LNOT: :DEF: Report_Hdr
        GBLS    Report_Hdr

        [       :LNOT: :DEF: Get_Types
        GBLS    Get_Types
        ]
        [       :LNOT: :DEF: Types_Hdr
Get_Types                       SETS    "GET oslib/Types.Hdr"
        |
Get_Types                       SETS    ""
        ]
        $Get_Types

        [       :LNOT: :DEF: Get_OS
        GBLS    Get_OS
        ]
        [       :LNOT: :DEF: OS_Hdr
Get_OS                          SETS    "GET oslib/OS.Hdr"
        |
Get_OS                          SETS    ""
        ]
        $Get_OS

        [       :LNOT: :DEF: Get_Wimp
        GBLS    Get_Wimp
        ]
        [       :LNOT: :DEF: Wimp_Hdr
Get_Wimp                        SETS    "GET oslib/Wimp.Hdr"
        |
Get_Wimp                        SETS    ""
        ]
        $Get_Wimp

;Symbols for constants
Report_RegistersDisplayR0       *       &1
Report_RegistersDisplayR1       *       &2
Report_RegistersDisplayR2       *       &4
Report_RegistersDisplayR3       *       &8
Report_RegistersDisplayR4       *       &10
Report_RegistersDisplayR5       *       &20
Report_RegistersDisplayR6       *       &40
Report_RegistersDisplayR7       *       &80
Report_RegistersDisplayR8       *       &100
Report_RegistersDisplayR9       *       &200
Report_RegistersDisplayR10      *       &400
Report_RegistersDisplayR11      *       &800
Report_RegistersDisplayR12      *       &1000
Report_RegistersDisplayR13      *       &2000
Report_RegistersDisplayR14      *       &4000
Report_RegistersDisplayR15      *       &8000
Report_RegistersRegistersAreStrings *       &10000

;Symbols for structure offsets and sizes
                                ^       0
Report_RegistersSaveArea_reg    #       16*Int
Report_RegistersSaveArea        *       @

                                ^       0
                                #       Bits
Report_RegistersFlags           *       @


;Symbols for SWI's and SWI reason codes
XReport_Text0                   *       &74C80
Report_Text0                    *       &54C80
   ;Entry
   ;  R0 -> text (String)

XReport_TextS                   *       &74C81
Report_TextS                    *       &54C81

XReport_Regs                    *       &74C82
Report_Regs                     *       &54C82

XReport_Registers               *       &74C83
Report_Registers                *       &54C83
   ;Entry
   ;  R0 -> heading (String)
   ;  R1 -> registers (Report_RegistersSaveArea)
   ;  R2 = flags (Report_RegistersFlags)

XReport_Where                   *       &74C84
Report_Where                    *       &54C84

XReport_Poll                    *       &74C85
Report_Poll                     *       &54C85
   ;Entry
   ;  R0 = event (Wimp_EventNo)

XReport_Dump                    *       &74C86
Report_Dump                     *       &54C86
   ;Entry
   ;  R0 -> address (data)
   ;  R1 = length (Int)
   ;  R2 = width (Int)

XReport_GetSwiRet               *       &74C87
Report_GetSwiRet                *       &54C87

XReport_Quit                    *       &74C8A
Report_Quit                     *       &54C8A

XReport_Clear                   *       &74C8B
Report_Clear                    *       &54C8B

XReport_Open                    *       &74C8C
Report_Open                     *       &54C8C

XReport_Close                   *       &74C8D
Report_Close                    *       &54C8D

XReport_On                      *       &74C8E
Report_On                       *       &54C8E

XReport_Off                     *       &74C8F
Report_Off                      *       &54C8F

XReport_CmdOn                   *       &74C90
Report_CmdOn                    *       &54C90

XReport_CmdOff                  *       &74C91
Report_CmdOff                   *       &54C91

XReport_Hide                    *       &74C92
Report_Hide                     *       &54C92

XReport_UnHide                  *       &74C93
Report_UnHide                   *       &54C93

XReport_ErrOn                   *       &74C94
Report_ErrOn                    *       &54C94

XReport_ErrOff                  *       &74C95
Report_ErrOff                   *       &54C95

XReport_TaskOn                  *       &74C96
Report_TaskOn                   *       &54C96

XReport_TaskOff                 *       &74C97
Report_TaskOff                  *       &54C97

XReport_Vdu4On                  *       &74C98
Report_Vdu4On                   *       &54C98

XReport_Vdu4Off                 *       &74C99
Report_Vdu4Off                  *       &54C99

XReport_RmaOn                   *       &74C9A
Report_RmaOn                    *       &54C9A

XReport_RmaOff                  *       &74C9B
Report_RmaOff                   *       &54C9B

XReport_TimeOn                  *       &74C9C
Report_TimeOn                   *       &54C9C

XReport_TimeOff                 *       &74C9D
Report_TimeOff                  *       &54C9D

XReport_SrceOn                  *       &74C9E
Report_SrceOn                   *       &54C9E

XReport_SrceOff                 *       &74C9F
Report_SrceOff                  *       &54C9F

XReport_ObeyOn                  *       &74CA0
Report_ObeyOn                   *       &54CA0

XReport_ObeyOff                 *       &74CA1
Report_ObeyOff                  *       &54CA1

XReport_Push                    *       &74CA2
Report_Push                     *       &54CA2

XReport_Pull                    *       &74CA3
Report_Pull                     *       &54CA3

        ]
        END

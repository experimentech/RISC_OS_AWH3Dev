;Assembler header file for Filter
;written by DefMod (Jan  2 2007) on Tue Jan  2 11:56:37 2007
;Jonathan Coxhead, jonathan@doves.demon.co.uk, 17 May 1995

        [       :LNOT: :DEF: Filter_Hdr
        GBLS    Filter_Hdr

        [       :LNOT: :DEF: Get_Types
        GBLS    Get_Types
        ]
        [       :LNOT: :DEF: Types_Hdr
Get_Types                       SETS    "GET oslib/Types.Hdr"
        |
Get_Types                       SETS    ""
        ]
        $Get_Types

        [       :LNOT: :DEF: Get_OS
        GBLS    Get_OS
        ]
        [       :LNOT: :DEF: OS_Hdr
Get_OS                          SETS    "GET oslib/OS.Hdr"
        |
Get_OS                          SETS    ""
        ]
        $Get_OS

        [       :LNOT: :DEF: Get_Wimp
        GBLS    Get_Wimp
        ]
        [       :LNOT: :DEF: Wimp_Hdr
Get_Wimp                        SETS    "GET oslib/Wimp.Hdr"
        |
Get_Wimp                        SETS    ""
        ]
        $Get_Wimp

;Symbols for constants
Filter_NameLimit                *       40
Filter_AllTasks                 *       &0

;Symbols for SWI's and SWI reason codes
XFilter_RegisterPreFilter       *       &62640
Filter_RegisterPreFilter        *       &42640
   ;Entry
   ;  R0 -> filter_name (String)
   ;  R1 -> code (code)
   ;  R2 = handle (pointer to data)
   ;  R3 = task (Wimp_T)

XFilter_RegisterPostFilter      *       &62641
Filter_RegisterPostFilter       *       &42641
   ;Entry
   ;  R0 -> filter_name (String)
   ;  R1 -> code (code)
   ;  R2 = handle (pointer to data)
   ;  R3 = task (Wimp_T)
   ;  R4 = mask (Wimp_PollFlags)

XFilter_DeRegisterPreFilter     *       &62642
Filter_DeRegisterPreFilter      *       &42642
   ;Entry
   ;  R0 -> filter_name (String)
   ;  R1 -> code (code)
   ;  R2 = handle (pointer to data)
   ;  R3 = task (Wimp_T)

XFilter_DeRegisterPostFilter    *       &62643
Filter_DeRegisterPostFilter     *       &42643
   ;Entry
   ;  R0 -> filter_name (String)
   ;  R1 -> code (code)
   ;  R2 = handle (pointer to data)
   ;  R3 = task (Wimp_T)
   ;  R4 = mask (Wimp_PollFlags)

XFilter_RegisterRectFilter      *       &62644
Filter_RegisterRectFilter       *       &42644
   ;Entry
   ;  R0 -> filter_name (String)
   ;  R1 -> code (code)
   ;  R2 = handle (pointer to data)
   ;  R3 = task (Wimp_T)

XFilter_DeRegisterRectFilter    *       &62645
Filter_DeRegisterRectFilter     *       &42645
   ;Entry
   ;  R0 -> filter_name (String)
   ;  R1 -> code (code)
   ;  R2 = handle (pointer to data)
   ;  R3 = task (Wimp_T)

XFilter_RegisterCopyFilter      *       &62646
Filter_RegisterCopyFilter       *       &42646
   ;Entry
   ;  R0 -> filter_name (String)
   ;  R1 -> code (code)
   ;  R2 = handle (pointer to data)

XFilter_DeRegisterCopyFilter    *       &62647
Filter_DeRegisterCopyFilter     *       &42647
   ;Entry
   ;  R0 -> filter_name (String)
   ;  R1 -> code (code)
   ;  R2 = handle (pointer to data)

XFilter_RegisterPostRectFilter  *       &62648
Filter_RegisterPostRectFilter   *       &42648
   ;Entry
   ;  R0 -> filter_name (String)
   ;  R1 -> code (code)
   ;  R2 = handle (pointer to data)
   ;  R3 = task (Wimp_T)

XFilter_DeRegisterPostRectFilter *       &62649
Filter_DeRegisterPostRectFilter *       &42649
   ;Entry
   ;  R0 -> filter_name (String)
   ;  R1 -> code (code)
   ;  R2 = handle (pointer to data)
   ;  R3 = task (Wimp_T)

XFilter_RegisterPostIconFilter  *       &6264A
Filter_RegisterPostIconFilter   *       &4264A
   ;Entry
   ;  R0 -> filter_name (String)
   ;  R1 -> code (code)
   ;  R2 = handle (pointer to data)
   ;  R3 = task (Wimp_T)

XFilter_DeRegisterPostIconFilter *       &6264B
Filter_DeRegisterPostIconFilter *       &4264B
   ;Entry
   ;  R0 -> filter_name (String)
   ;  R1 -> code (code)
   ;  R2 = handle (pointer to data)
   ;  R3 = task (Wimp_T)

Service_FilterManagerInstalled  *       &87
   ;Entry
   ;  R0 = version (Int)
   ;  R1 = &87

Service_FilterManagerDying      *       &88
   ;Entry
   ;  R1 = &88

        ]
        END

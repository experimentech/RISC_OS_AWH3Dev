;Assembler header file for DOSFS
;written by DefMod (Jan  2 2007) on Tue Jan  2 11:43:21 2007
;Jonathan Coxhead, jonathan@doves.demon.co.uk, 24 May 1995

        [       :LNOT: :DEF: DOSFS_Hdr
        GBLS    DOSFS_Hdr

        [       :LNOT: :DEF: Get_Types
        GBLS    Get_Types
        ]
        [       :LNOT: :DEF: Types_Hdr
Get_Types                       SETS    "GET oslib/Types.Hdr"
        |
Get_Types                       SETS    ""
        ]
        $Get_Types

        [       :LNOT: :DEF: Get_OS
        GBLS    Get_OS
        ]
        [       :LNOT: :DEF: OS_Hdr
Get_OS                          SETS    "GET oslib/OS.Hdr"
        |
Get_OS                          SETS    ""
        ]
        $Get_OS

        [       :LNOT: :DEF: Get_FileCore
        GBLS    Get_FileCore
        ]
        [       :LNOT: :DEF: FileCore_Hdr
Get_FileCore                    SETS    "GET oslib/FileCore.Hdr"
        |
Get_FileCore                    SETS    ""
        ]
        $Get_FileCore

;Symbols for constants
DOSFS_FormatDOSQ                *       &0
DOSFS_FormatDOSM                *       &1
DOSFS_FormatDOSH                *       &2
DOSFS_FormatDOSN                *       &3
DOSFS_FormatDOSP                *       &4
DOSFS_FormatDOST                *       &5
DOSFS_FormatDOSU                *       &6
DOSFS_FormatAtariM              *       &7
DOSFS_FormatAtariN              *       &8
DOSFS_FormatPCMCIA              *       &9

;Symbols for structure offsets and sizes
                                ^       0
                                #       Int
DOSFS_FormatSpecifier           *       @


;Symbols for SWI's and SWI reason codes
XDOSFS_DiscFormat               *       &64B00
DOSFS_DiscFormat                *       &44B00
   ;Entry
   ;  R0 = buffer (pointer to FileCore_Format)
   ;  R1 = vet_format_swi (Int)
   ;  R2 = vet_format_handle (Int)
   ;  R3 = format (DOSFS_FormatSpecifier)

XDOSFS_LayoutStructure          *       &64B01
DOSFS_LayoutStructure           *       &44B01
   ;Entry
   ;  R0 = format (DOSFS_FormatSpecifier)
   ;  R1 -> defect_list (FileCore_DefectList)
   ;  R2 -> disc_name (String)
   ;  R3 = image_file (OS_F)

XDOSFS_LayoutStructureW         *       &64B01
DOSFS_LayoutStructureW          *       &44B01
   ;Entry
   ;  R0 = format (DOSFS_FormatSpecifier)
   ;  R1 -> defect_list (FileCore_DefectList)
   ;  R2 -> disc_name (String)
   ;  R3 = image_file (OS_FW)

XDOSFS_LayoutStructureGivenSize *       &64B01
DOSFS_LayoutStructureGivenSize  *       &44B01
   ;Entry
   ;  R0 = format (DOSFS_FormatSpecifier)
   ;  R1 -> defect_list (FileCore_DefectList)
   ;  R2 -> disc_name (String)
   ;  R3 = image_file (OS_F)
   ;  R4 = size (Int)

XDOSFS_LayoutStructureGivenSizeW *       &64B01
DOSFS_LayoutStructureGivenSizeW *       &44B01
   ;Entry
   ;  R0 = format (DOSFS_FormatSpecifier)
   ;  R1 -> defect_list (FileCore_DefectList)
   ;  R2 -> disc_name (String)
   ;  R3 = image_file (OS_FW)
   ;  R4 = size (Int)

        ]
        END

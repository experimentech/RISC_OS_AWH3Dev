;Assembler header file for WritableField
;written by DefMod (Jan  2 2007) on Tue Jan  2 11:53:03 2007
;Jonathan Coxhead, jonathan@doves.demon.co.uk, 5 Sept 1995

        [       :LNOT: :DEF: WritableField_Hdr
        GBLS    WritableField_Hdr

        [       :LNOT: :DEF: Get_Types
        GBLS    Get_Types
        ]
        [       :LNOT: :DEF: Types_Hdr
Get_Types                       SETS    "GET oslib/Types.Hdr"
        |
Get_Types                       SETS    ""
        ]
        $Get_Types

        [       :LNOT: :DEF: Get_Toolbox
        GBLS    Get_Toolbox
        ]
        [       :LNOT: :DEF: Toolbox_Hdr
Get_Toolbox                     SETS    "GET oslib/Toolbox.Hdr"
        |
Get_Toolbox                     SETS    ""
        ]
        $Get_Toolbox

        [       :LNOT: :DEF: Get_Gadget
        GBLS    Get_Gadget
        ]
        [       :LNOT: :DEF: Gadget_Hdr
Get_Gadget                      SETS    "GET oslib/Gadget.Hdr"
        |
Get_Gadget                      SETS    ""
        ]
        $Get_Gadget

        [       :LNOT: :DEF: Get_Font
        GBLS    Get_Font
        ]
        [       :LNOT: :DEF: Font_Hdr
Get_Font                        SETS    "GET oslib/Font.Hdr"
        |
Get_Font                        SETS    ""
        ]
        $Get_Font

;Symbols for constants
Class_WritableField             *       &200
WritableField_GenerateUserValueChanged *       &1
WritableField_GenerateSetValueChanged *       &2
WritableField_RJustified        *       &4
WritableField_HCentred          *       &8
WritableField_ConcealText       *       &10
Action_WritableFieldValueChanged *       &82885
WritableField_ValueTooLong      *       &1

;Symbols for structure offsets and sizes
                                ^       0
WritableField_Gadget_text       #       Toolbox_MsgReference
WritableField_Gadget_text_limit #       Int
WritableField_Gadget_allowable  #       Toolbox_MsgReference
WritableField_Gadget_allowable_limit #       Int
WritableField_Gadget_prev       #       Toolbox_C
WritableField_Gadget_next       #       Toolbox_C
WritableField_Gadget            *       @

                                ^       0
WritableField_Object            Gadget_Object_MEMBERS
WritableField_Object_text       #       Toolbox_MsgReference
WritableField_Object_text_limit #       Int
WritableField_Object_allowable  #       Toolbox_MsgReference
WritableField_Object_allowable_limit #       Int
WritableField_Object_prev       #       Toolbox_C
WritableField_Object_next       #       Toolbox_C
WritableField_Object            *       @

                                ^       0
WritableField_ActionValueChanged_string #       212*Char
WritableField_ActionValueChanged *       @

                                ^       0
WritableField_ActionValueChangedBlock Toolbox_ActionHeader_MEMBERS
WritableField_ActionValueChangedBlock_string #       212*Char
WritableField_ActionValueChangedBlock *       @


;Symbols for SWI's and SWI reason codes
WritableField_SetValue          *       &200
   ;Entry
   ;  R0 = flags (Bits)
   ;  R1 = window (Toolbox_O)
   ;  R2 = &200
   ;  R3 = writable_field (Toolbox_C)
   ;  R4 -> value (String)

WritableField_GetValue          *       &201
   ;Entry
   ;  R0 = flags (Bits)
   ;  R1 = window (Toolbox_O)
   ;  R2 = &201
   ;  R3 = writable_field (Toolbox_C)
   ;  R4 = buffer (pointer to String)
   ;  R5 = size (Int)
   ;Exit
   ;  R5 = used (Int)

WritableField_SetAllowable      *       &202
   ;Entry
   ;  R0 = flags (Bits)
   ;  R1 = window (Toolbox_O)
   ;  R2 = &202
   ;  R3 = writable_field (Toolbox_C)
   ;  R4 -> allowed (String)

WritableField_SetFont           *       &204
   ;Entry
   ;  R0 = flags (Bits)
   ;  R1 = window (Toolbox_O)
   ;  R2 = &204
   ;  R3 = writable_field (Toolbox_C)
   ;  R4 -> font_name (String)
   ;  R5 = xsize (Int)
   ;  R6 = ysize (Int)

        ]
        END

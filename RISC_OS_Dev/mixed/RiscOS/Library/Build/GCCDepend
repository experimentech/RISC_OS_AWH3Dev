#!/usr/bin/env perl
#
# Copyright (c) 2013, RISC OS Open Ltd
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met: 
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of RISC OS Open Ltd nor the names of its contributors
#       may be used to endorse or promote products derived from this software
#       without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# Process GCC's -MD output into something which AMU will understand
# Usage:
#  GCCDepend <rule target> 
my $target=shift @ARGV;
open(IN, "<!!Depend");
open(OUT, ">!Depend");
while(<IN>) {
  chomp;
  my @files = split;
  for (@files) {
    if ((substr($_,-1) ne ":") # Ignore the very first entry that specifies the target file
        && ($_ ne "\\") # Ignore continuation character
        ) {
      my @folders = split(/\//); # Split on unix seperator

      # Process the folder list to remove ..'s where possible
      # Also convert any .'s in folder names to /'s
      my @folders2;
      for (@folders) {
        if($_ eq "..") {
          if(($#folders2 > 0) && ($folders[$#folders] ne "^")) {
            $#folders2--;
          } else {
            push @folders2, "^";
          }
        } else {
          s/\./\//g;
          push @folders2, $_;
        }
      }
      @folders = @folders2;

      $folders[$#folders] = join('.',reverse(split(/\//,$folders[$#folders]))); # Convert file name to RISC OS format
      $_ = join('.',@folders); # Construct RISC OS path
      s/^[@.]+//; # Get rid of any leading @. or .
      s/\/\$\$/.\$/; # Fix up any $'s
      print OUT $target . ":\t" . $_ . "\n";
    }
  }
}
close(IN);
close(OUT);
unlink("!!Depend");

# This source code in this file is licensed to You by Castle Technology
# Limited ("Castle") and its licensors on contractual terms and conditions
# ("Licence") which entitle you freely to modify and/or to distribute this
# source code subject to Your compliance with the terms of the Licence.
# 
# This source code has been made available to You without any warranties
# whatsoever. Consequently, Your use, modification and distribution of this
# source code is entirely at Your own risk and neither Castle, its licensors
# nor any other person who has contributed to this source code shall be
# liable to You for any loss or damage which You may suffer as a result of
# Your use, modification or distribution of this source code.
# 
# Full details of Your rights and obligations are set out in the Licence.
# You should have received a copy of the Licence with this source code file.
# If You have not received a copy, the text of the Licence is available
# online at www.castle-technology.co.uk/riscosbaselicence.htm
# 
# Makefile fragment for Binary Build Environment exporting.

INCLUDED_BBEEXPORT = YES

#
# This Makefile is included directly by srcbuild as the core implementation
# of the binary build environment phase.
#
STDMAKEFILE=$Id: BBEExport,v 1.2 2011-03-31 00:04:06 bavison Exp $

.SILENT:

# Set the default option - component Makefile changes BBETYPE to override this
# Makefile's generic rules, but can of course depend on them by constructing
# the correct target.

BBETYPE=generic

# Get the components Makefile in case it wants to override the rules

include Makefile


# The default rule invoked by srcbuild simply invokes the correct sub-rule
bbe: bbe-${BBETYPE}
  @echo ${COMPONENT}: BBE phase complete


# Now all the default rules for the different module types

bbe-generic: bbe-${COMPONENTTYPE}-generic
  @|

bbe-C-generic: internal-bbe-generic
  @|

bbe-ASM-generic: internal-bbe-generic
  @|

bbe-BAS-generic: internal-bbe-generic
  @|

bbe-KERNEL-generic: internal-bbe-generic
  @|

bbe-DATA-generic: internal-bbe-generic
  @|

bbe-RES-generic: internal-bbe-generic
  @|

bbe-EXP-generic: internal-bbe-generic
  @|

bbe-HAL-generic: internal-bbe-generic
  @|

internal-bbe-generic: bbe-generic-resources
  @|

#
# Now the generic ROM and resources rules
#
include Makefiles:StdTools

bbe-generic-resources-get-alias:
  @| Component Makefiles may rely on: BBE_Export_Dir, BBE_Export_File, BBE_Export_File_In_Dir
  SetMacro Alias$BBEExportResourcesRule IfThere %0 Then ${CP} %0 ${BBEDIR}.%0 ${CPFLAGS}
  SetMacro Alias$BBEExportDirectoryRule IfThere %0 Then ${MKDIR} ${BBEDIR}.%0
  SetMacro Alias$BBE_Export_Dir BBEExportDirectoryRule %0|MBBEExportResourcesRule %0
  SetMacro Alias$BBE_Export_File BBEExportResourcesRule %0
  SetMacro Alias$BBE_Export_File_In_Dir BBEExportDirectoryRule %0|MBBEExportResourcesRule %0.%1

bbe-generic-resources: bbe-generic-resources-get-alias
  @| Generic rules copy the appropriate parts of the Resources directory.
  BBE_Export_Dir Resources.${LOCALE}
  BBE_Export_Dir Resources.Common.${LOCALE}
  BBE_Export_Dir Resources.${SYSTEM}.${LOCALE}
  BBE_Export_Dir Resources.${USERIF}.${LOCALE}
  BBE_Export_Dir Resources.${SYSTEM}.Common
  BBE_Export_Dir Translate.${LOCALE}
  BBE_Export_Dir Translate.Common.${LOCALE}
  BBE_Export_Dir Translate.${SYSTEM}.${LOCALE}
  BBE_Export_Dir Translate.${USERIF}.${LOCALE}
  BBE_Export_Dir Translate.${SYSTEM}.Common
  BBE_Export_File VersionNum
  BBE_Export_File Version
  
# EOF

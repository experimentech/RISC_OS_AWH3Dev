PDumperPCL
----------

by Herbert zur Nedden


Purpose
-------

Support duplex printing on a PCL printer. Duplex printing simply means to print on both sides of the paper letting the printer turn the page.



RISC OS Open
------------

This PDumper and the files to go with are based on PDumperLJ supplied by RISC OS Open and are given back to this RISC OS Open initiative and thus the copyright & license is the same as for PDumperLJ.



Installation
------------

Copy the module PDumperPCL into !Boot.Choices.Printers.PDumpers and then use the Printer Definitinion file PCL Duplex.

This file has three print qualities (150, 300 and 600 dpi) each in four duplex modes: simplex, duplex short binding, duplex long binding and duplex rotating (which offers long binding duplex on printers which can't do this by themselves like the Canon i-Sensys MF4690PL).

More detail about why this PDumper is needed for duplex printing and the story about the rotating duplex please read on... 



Why did I do this
-----------------

I bought a Canon i-Sensys MF4690PL multifunction printer which does not support Postscript but is happy to accept PCL. Printing to the MF4690PL with some printer definition like HP LaserJet 5 (using PDumperLJ) worked fine.

But the Canon i-Sensys MF4690PL can print duplex, that is print on both sides of the paper. Unfortunately with PDumperLJ there is absolutely no chance to do duplex printing due to the was this PDumper works:

At the beginning and at the end of every page the printer is reset completely by PDumperLJ - this obvoiusly implies that whaever duplex printing settings are sent to the printer these are valid for just one page and thus useless since for duplex they have to survive a bit longer.



Initialize once only
--------------------

The first thing to fix was to initialize the printer once for a print job and not once per page.

In the StartJob part I just set a flag to "new job started". I thought about initializing the printer here but for some reason this failed in my first attempt so I figured why not leave the initializsation in the StartPage code and thus save me the work of trying to figure out the way Printers works in too much detail.

In the StartPage part this new flag is used to decide if the printer needs to be initialized, or not.

In the EndPage part all I send to the printer is the form feed, that is no more printer resetting is done here.

Unfortunately there is no EndJob code so that after a job has been printed the printer is left in the state after the last page and not reset, but that should not matter much since at the beginning of a printing job the printer is usually initialized anyhow be it printing from RISC OS, Windows, Linux or the like.

With this change duplex printing worked ... to some extent.



Rotating Duplex
---------------

After having done that fix sending the printer the correct commands for duplex printing was easy (I simply included them in the paper initialization strings for my first tests).

Simplex printing (i.e. without duplex, printer command "Esc &0S") worked fine. Please note that it is a good idea to send this "print simplex" command to the printer since the printer can be preset to print duplex in its hardware settings. Duplex with short edge binding ("Esc &1S") was no problem either but when I told the printer to do duplex with long edge binding (using "Esc &2S") my Canon i-Sensys MF4690PL did short edge binding duplex. What a pity, since long edge binding is just the duplex mode I need much more often.

I asked Canon for help and was told to go to the developer pages. There I then registered as developer to get hold of their guides (until then I used the PCL guides from HP) but all that resulted in is the proof that I understood the HP guides and that for some reason the Canon i-Sensys MF4690PL does not quite work as the guides describe.

Trying to catch the printout data from a Windows PC didn't work (that is what I got in a file looked strange and not really like PCL or PJL) and using Gutenprint, which explicitely offers duplex worked exactly as my first PDumper, that is long edge dumplex printing didn't work (that is the printer prints duplex with short edge binding). This Gutenprint test was good in some way since it showed that I did understand the guides and sent the supposedly correct commands to the printer in the first place.

During my inspection of the PCL guides (yes, I was beyond just reading since I hoped to find some hint) I saw a command to rotate a page by 180°. So I decided to try the brute force approach, that is tell my printer to do short edge duplex and to rotate every second page by 180° to thus effectively get the desired result.

And it worked... again not quite.



Shift on backside
-----------------

The next oddity I came across was the positioning on the page. Simply put with no duplex and short edge binding duplex the printout was ok but with the long edge duplex which was now done as short edge binding duplex rotating every second page the back sides were too far towards the bottom of the page. OK, more discovery needed...

The page initializsation string  moves the printout up and sideways on the page so that it is where it shall be. Strange that that is needed here since this suggests that the basic positioning of the printout is slightly off. But since it works it can't be that bad.

As stated aboge on the rotated page the data was too far down ... it was about 0.9cm too far down. The "-256" in the page initialisation string means that the printout needs to be shifted -256/720 inces which is about -4.5mm. Since the rotated page is twice that far in the wrong direction the obvious assumption was that due to rotating this offset now worked in the opposite direction and thus instead of shifting 4.5mm up it moved 4.5mm down - summing up to 0.9cm. My first simple test proved this to be right since when I sent a "Esc &l-42u+256Z" on the rotated pages the position was perfect.

Since I do not know if other printers behave in a differnt manner I decided to not hard code this in the PDumper but to let you enter it in the printer definition file of your choice (you can use my MF4690PL file to start with). For rotating duplex I expect two command strings:

"Esc &l0O Esc &l-42u-256Z" for odd pages (not rotated, standard offset)
"Esc &l2O Esc &l-42u+256Z" for odd pages (    rotated, opposite offset)

The "Esc l#O" does the rotating (#=2) or not (#=0) and the "Esc l...Z" was looked into just above.



Printer Defintion File
----------------------

OK, now this is what the printer defintion file needs to contain:

The PDumper is "PDumperPCL" with PDumper number 24.

For normal upright non-duplex printout you can simply use the same paper definitons as for any Laser Jet PCL based printer.

For duplex (and for forced simplex print) the paper definition needs to tell the PDumperPCL what to do. Since I think that it can well happen that some printer does manage to do long edge binding duplex by itself PDumerPCL supports these four duplex modes:

None      Well, no duplex
Short     Duplex printing with short edge binding
Long      Duplex printing with long edge binding
Rotate    Duplex pringing with the aforementioned rotation trick simulating longe edge binding

This is stored in the "Zero Skip" field. Please note that I check for the first character only, so N, S, L and R are the values in question (in upper case). PrintEdit lets you enter single characters in quotes only anyhow, and entering "N","o","n","e" looks really strange so why bother about more than one character?

For the rotating duplex print I PDumperPCL needs to know how to rotate etc and expects the page commands for odd pages (not rotated) and the even pages (rotated) in the two bottom data strings in PrintEdit labelled "Line pass 4" and "Line pass 4b".

For the Canon i-Sensys MF4690PL (and probably other printers who are happy with a page init string of "Esc &l-42u-256Z" you want to try these:

Line pass 4:   "Esc &l0O Esc &l-42u-256Z"
Line pass 4b:  "Esc &l2O Esc &l-42u+256Z"


To make life easier I supply the file MF4690PL with PDumperPCL.



Important note
--------------

As for the printer commands, please note that the "Esc" means the escape code (ASCII 27) and not the chars "Esc" and that the spaces in the sample code sequences given are just for legibility.



Code Changes i did
------------------

When adapting the PDumperLJ code I dropped a few things that were not needed anymore like the "RobStrings" flag which gave the option to include the new "Esc %-12345X" reset command, or not - the command is used since it is by now standard and recommended.

As for the question of how to control the printing mode I took a look at the paper definitions and they offer 20 "data" fields. As is probably well-known the second data entry contains the initialization string for the paper.

The data field number 10 is labelled to be "data zero skip" and doesn't seem to be used in PDumperLJ (most others are not used either as far as I can see). So I decided that for my new PDumperPCL data field 10 will be used to control duplex printing.

Possible values here are:

"N"  No duplex           Obvious, isn't it
"S"  Short edge duplex   Duplex printing with binding at the short edge
"L"  Long edge duplex    Duplex printing with binding at the long edge (the common one)
"R"  Rotating duplex     Result for Long edge duplex achieved with a trick (see below)
     anything else       No duplex

Please note that I check for the first character only, so N, S, L and R are the values in question (in upper case). PrintEdit lets you enter single characters in quotes only anyhow, and entering "N","o","n","e" looks really strange so why bother about more than one character?

The two commands for rotating are read from the last two data fields, that is "Line pass 4" for odd and "Line pass 4b" for even pages as already outlined above. If they are empty then well, they are ignored and thus the results probably not the desired ones.

                                                    

Files Changed in more detail
----------------------------

!MkHzN             The obey file I used to compile and install.
                   It is basically !MkClean, !MkExport and !MkInstall with
                   the installation destination !Boot.Choices.Printers.PDumpers.
                    
makefile           Makefile amended to reflect PDumperPCL name

s.EndPage          Do not output printer reset string;
                   simply made that code a comment

s.PDumperPCL       Renamed from PDumperLJ
                   Set DirSuffix to "PCL"
                   Removed RobStrings (simply making that code a comment)

s.StartJob         Inserted Generic.StartJob since I needed to add a bit
                   Added setting of new "StartFlag" variable

s.StartPage        In here most changes took place
                   Variable "StartFlag" is in here
                   Initialize printer only if "StartFlag" is set
                   Rearraged code a bit to make this easier
                    (i.e. multiple copies support moved)
                   Reset "StartFlag"
                   Removed RobStrings (simply making that code a comment)
                   Support for the four duplex modes outlined above
                   Page rotation for every second page (for duplex)

s.Version          PDumperNumber set to 24 (registered with ROOL)
                   PDumperTitle set to "PDumperPCL"
                   PrefixWithZeroes set to :LNOT: true since false doesn't work (I have a slighly older CC)
                   

Disclaimer
----------

The PDumperPCL works fine with my Canon i-Sensys MF4690PL using the settings "No duplex", "Short edge duplex" and "Rotating duplex". Perhaps with some printer where the firmware obeys the PCL definitions better you can use the normal "Long edge duplex" which I assume might be less work for the printer to do.

Furthermore I would like to point out that one major difference to PDumperLJ is that PDumperPCL initialises the printer once per job and not once per page and that it does not reset the printer after printing is done with. It can well be that some (older) printer models need just that and thus require PDumperLJ to be used.


Please
------

Please let me know if PDumperPCL works for your printer (stating the model), and if it does not but PDumperLJ does.

Herbert zur Nedden, e-mail address (currently) HzN.2008@HQ.gag.de, or use http://www.gag.de/msgsend.hmtl





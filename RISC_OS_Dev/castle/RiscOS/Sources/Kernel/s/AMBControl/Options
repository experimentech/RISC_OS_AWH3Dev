; This source code in this file is licensed to You by Castle Technology
; Limited ("Castle") and its licensors on contractual terms and conditions
; ("Licence") which entitle you freely to modify and/or to distribute this
; source code subject to Your compliance with the terms of the Licence.
; 
; This source code has been made available to You without any warranties
; whatsoever. Consequently, Your use, modification and distribution of this
; source code is entirely at Your own risk and neither Castle, its licensors
; nor any other person who has contributed to this source code shall be
; liable to You for any loss or damage which You may suffer as a result of
; Your use, modification or distribution of this source code.
; 
; Full details of Your rights and obligations are set out in the Licence.
; You should have received a copy of the Licence with this source code file.
; If You have not received a copy, the text of the Licence is available
; online at www.castle-technology.co.uk/riscosbaselicence.htm
; 

; > s.Options

AMBMagicNodeID     * &4E424D41        ;"AMBN"

AMBInitialMaxNodes * 256


ApplicationStart  * (32*1024)

AbsMaxAppSize     * AplWorkMaxSize                   ;application space limit for RISC OS
AbsMaxAppPages    * (AbsMaxAppSize:SHR:Log2PageSize) ;and same limit expressed in Pages

;whether to check handles given to AMBControl - not very useful when in kernel
;
                    GBLL    ValidateAMBHandles
ValidateAMBHandles  SETL    {FALSE}


;performance enhancements originally introduced for Ursula OS
;
; ChocolateAMB       - if {FALSE}, disables all AMBControl crazy chocolate flavour enhancements
;
; AMB_LazyMapIn      - if {TRUE}, individual pages of a swapped-in task are only mapped in when
;                      necessary (happens via abort mechanism). This typically makes the swapping
;                      cost much lower and much less sensitive to large slot size. The worst case
;                      swapping cost is still good (abort mechanism cost is very small).
;                      Probably only worth supporting this on ARMs with simple instruction restart
;                      after abort (originally StrongARM revT or later for Ursula)
;
; AMB_ChocTrace      - if {TRUE}, keep trace info for some enhanced code calls and data (probably development only)

                    GBLL    AMB_LazyMapIn
                    GBLL    AMB_ChocTrace
                    GBLL    AMB_Debug

AMB_LazyMapIn       SETL    {TRUE}  :LAND: ChocolateAMB

AMB_ChocTrace       SETL    {FALSE} :LAND: ChocolateAMB   ;development only

AMB_Debug           SETL    {FALSE}

       END

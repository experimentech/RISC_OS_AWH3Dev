; This source code in this file is licensed to You by Castle Technology
; Limited ("Castle") and its licensors on contractual terms and conditions
; ("Licence") which entitle you freely to modify and/or to distribute this
; source code subject to Your compliance with the terms of the Licence.
; 
; This source code has been made available to You without any warranties
; whatsoever. Consequently, Your use, modification and distribution of this
; source code is entirely at Your own risk and neither Castle, its licensors
; nor any other person who has contributed to this source code shall be
; liable to You for any loss or damage which You may suffer as a result of
; Your use, modification or distribution of this source code.
; 
; Full details of Your rights and obligations are set out in the Licence.
; You should have received a copy of the Licence with this source code file.
; If You have not received a copy, the text of the Licence is available
; online at www.castle-technology.co.uk/riscosbaselicence.htm
; 
; > s.readinfo

; handle read info. reason code

;entry:
;     R0 = reason code and flags
;          bits 0-7   4 (reason code)
;          bits 8-31  reserved (must be 0)
;     R2 = handle

;exit:
;     R1 = current mapping start address; -1 means mapped out
;     R3 = currently allocated number of pages

readinfo
        Push    "R0,LR"

      [ ValidateAMBHandles
        ;validate handle
        LDR     R0,AMBNhandles
        CMP     R2,R0
        BGT     badhandle_rinfo
        CMP     R2,#1
        BLT     badhandle_rinfo
      ]

        LDR     R0,AMBNodeHandles   ; R0 -> handle array
        LDR     R1,[R0,R2,LSL #2]   ; R1 -> node

      [ ValidateAMBHandles
        ;check we have a proper id for node handle
        LDR     R3,=AMBMagicNodeID
        LDR     LR,[R1,#AMBNode_id]
        CMP     LR,R3
        BNE     badhandle_rinfo
      ]

        LDR     R3,[R1,#AMBNode_DANode+DANode_PMPSize]
        LDR     LR,[R1,#AMBNode_DANode+DANode_Size]
        CMP     LR,#0
        MOVEQ   R1,#-1
        LDRNE   R1,[R1,#AMBNode_DANode+DANode_Base]
        Pull    "R0,LR"
        B       SLVK

        LTORG

      [ ValidateAMBHandles
badhandle_rinfo
        Pull    "R0,LR"
        B       badhandle
      ]

    END

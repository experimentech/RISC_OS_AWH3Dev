Service_ModulePostInit (Service call &DA)

    A module has been successfully initialised

On entry
    R0 = module address
    R1 = &DA (reason code)
    R2 = pointer to module title
    R3 = 0 for the base instantiation, else R3 = pointer to postfix string
    R4 = BCD version number (derived from module's help string)

On exit
    All registers must be preserved

Use
    This service call is made after a module has been (re)initialised and
    after it has been linked into the module chain. This means that any
    SWIs etc provided by the module are available (in contrast, during any
    service calls issued by the module's own initialisation code, the module
    is not yet linked into the chain).

    This service call is intended to allow clients of a module to
    (re)register themselves with it.



Service_ModulePostFinal (Service call &DB)

    A module has been successfully finalised

On entry
    R0 = module address
    R1 = &DB (reason code)
    R2 = pointer to module title
    R3 = 0 for the base instantiation, else R3 = pointer to postfix string
    R4 = BCD version number (derived from module's help string)

On exit
    All registers must be preserved

Use
    This service call is made after a module has been finalised, including
    during a reinitialisation. The module is not linked into the module
    chain, so its SWIs etc are not available.

    This service call is intended to inform clients of a module that any
    registrations they made with it are no longer active, and any associated
    handles are stale.



BJGA 13-Dec-2002

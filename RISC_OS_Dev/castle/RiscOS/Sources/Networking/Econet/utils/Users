; This source code in this file is licensed to You by Castle Technology
; Limited ("Castle") and its licensors on contractual terms and conditions
; ("Licence") which entitle you freely to modify and/or to distribute this
; source code subject to Your compliance with the terms of the Licence.
; 
; This source code has been made available to You without any warranties
; whatsoever. Consequently, Your use, modification and distribution of this
; source code is entirely at Your own risk and neither Castle, its licensors
; nor any other person who has contributed to this source code shall be
; liable to You for any loss or damage which You may suffer as a result of
; Your use, modification or distribution of this source code.
; 
; Full details of Your rights and obligations are set out in the Licence.
; You should have received a copy of the Licence with this source code file.
; If You have not received a copy, the text of the Licence is available
; online at www.castle-technology.co.uk/riscosbaselicence.htm
; 

        GET     Hdr:ListOpts
        GET     Hdr:Macros
        GET     Hdr:Services
        GET     Hdr:System
        GET     Hdr:Econet
        GET     Hdr:VduExt

        AREA    |Users$$Code|, CODE, READONLY, PIC

                ^ 0, R12
Wk_CallBuffer   # 256
Wk_NetStnBuffer # 8
Wk_TotalSize    * :INDEX: @
        ASSERT  Wk_TotalSize <= 1024                    ; Utility workspace limit

Utility_Code
        SUB     R13,R13,#&30                            ; Workaround bug in Arthur 1.20

        MOV     R11,R14

        MOV     R4,R1
        MOV     R0,#VduExt_WindowWidth
        MVN     R1,#0
        Push    "R0,R1"
        MOV     R0,R13
        MOV     R1,R13
        SWI     XOS_ReadVduVariables
        Pull    "R10,R14"
        MOVVS   PC,R11
        MOV     R6,#1
        ADD     R0,R10,#2
loop_9
        SWI     XOS_WriteS
        DCB     "    Stn User Id.  ", 0
        ALIGN
        MOVVS   PC,R11
        SUBS    R0,R0,#&14                              ; Column width of "Stn User Id."
        CMP     R0,#&14
        BLT     skip_6

        SWI     XOS_WriteS
        DCB     "  ", 0
        ALIGN
        MOVVS   PC,R11
        ADD     R6,R6,#1
        B       loop_9
skip_6
        SWI     XOS_NewLine
        MOVVS   PC,R11
        MOV     R7,#1
        MOV     R5,#0
loop_5
        MOV     R0,#FileServer_LoggedOnUsers
        ADR     R1,Wk_CallBuffer
        ADD     R2,R5,#10:SHL:8                         ; Up to 10 users
        STR     R2,[R1],#0                              ; Warning: Use the STR Rd,[Rn,#0] form in preference
        MOV     R2,#2
        MOV     R3,#?Wk_CallBuffer
        SWI     XNetFS_DoFSOp
        MOVVS   PC,R11
        LDRB    R9,[R1],#1                              ; Number of entries
        TEQ     R9,#0
        BNE     skip_1
        SWI     XOS_NewLine                             ; No entries
        MOV     PC,R11
skip_1
        ADD     R5,R5,R9
        MOV     R8,R1
loop_1
        BL      AssessStationHighlight
        LDRB    R0,[R8],#1                              ; Station
        LDRB    R14,[R8],#1                             ; Net
        Push    "R0,R14"
        MOV     R0,R13
        ADR     R1,Wk_NetStnBuffer
        MOV     R2,#?Wk_NetStnBuffer
        SWI     XOS_ConvertFixedNetStation
        MOVVS   PC,R11
        MOV     R0,#' '
        STRB    R0,[R1],#1                              ; Pad
        MOV     R2,#8
loop_2
        LDRB    R0,[R8],#1
        CMP     R0,#' '
        MOVLE   R0,#' '
        STRB    R0,[R1],#1                              ; Copy the user name
        ADDGT   R2,R2,#1
        BGT     loop_2

        SUB     R1,R1,#1
        ADD     R8,R8,#1                                ; Skip over the privlege byte 
        TEQ     R6,#1
        BNE     code_3

        MOV     R0,#0
        STRB    R0,[R1],#0                              ; Warning: Use the STR Rd,[Rn,#0] form in preference
        BL      PrintHighlighted
        MOVVS   PC,R11
        B       skip_7
code_3
        CMP     R2,#&12
        BGE     skip_4
        STRB    R0,[R1],#1
        ADD     R2,R2,#1
        B       code_3
skip_4
        BGT     code_4
loop_6
        MOV     R0,#0
        STRB    R0,[R1],#0                              ; Warning: Use the STR Rd,[Rn,#0] form in preference
        BL      PrintHighlighted
        MOVVS   PC,R11
        CMP     R7,R6
        BGE     skip_7
        ADD     R7,R7,#1
        SWI     XOS_WriteS
        DCB     "  ", 0
        ALIGN
        MOVVS   PC,R11
loop_7
        SUBS    R9,R9,#1                                ; More entries this buffer?
        BNE     loop_1
        B       loop_5                                  ; Get next buffer load
skip_7
        MOV     R7,#1
        SWI     XOS_NewLine
        MOVVS   PC,R11
        B       loop_7
code_4
        SUBS    R0,R6,R7
        BEQ     skip
        ADD     R7,R7,#1
        TEQ     R0,#1
        BEQ     loop_6
        MOV     R0,#' '
loop_4
        CMP     R2,#&26
        BGE     loop_6
        STRB    R0,[R1],#1
        ADD     R2,R2,#1
        B       loop_4
skip
        MOV     R14,#&14
        MLA     R0,R7,R14,R2
        SUB     R0,R0,R14
        CMP     R0,R10
        BLE     skip_2
        MOV     R7,#1
        SWI     XOS_NewLine
        MOVVS   PC,R11
        B       code_4
skip_2
        MOV     R0,#0
        STRB    R0,[R1],#0                              ; Warning: Use the STR Rd,[Rn,#0] form in preference
        BL      PrintHighlighted
        MOVVS   PC,R11
        SWI     XOS_NewLine
        MOVVS   PC,R11
        B       loop_7

PrintHighlighted ROUT
        TEQ     R3,#0
        ADR     R0,%FT10
        SWINE   XOS_Write0
        MOVVS   PC,R14
        ADR     R0,Wk_NetStnBuffer
        SWI     XOS_Write0
        MOVVS   PC,R14
        TEQ     R3,#0
        ADR     R0,%FT10
        SWINE   XOS_Write0
        MOV     PC,R14
10
        DCB     23, 17, 5, 1, 1, 1, 1, 1, 1, 1, 0       ; Swap colours
        ALIGN

AssessStationHighlight
        MOV     R1,R4
loop_8
        LDRB    R0,[R1],#1                              ; Skip spaces
        CMP     R0,#' '
        BEQ     loop_8

        MOVLT   R3,#0                                   ; Don't highlight
        MOVLT   PC,R14

        SUB     R1,R1,#1
        TEQ     R0,#'&'                                 ; It's hex
        BEQ     skip_5

        CMP     R0,#'0'
        RSBCSS  R2,R0,#'9'
        BCS     skip_5
        Push    "R8"
        ADD     R8,R8,#2
loop
        LDRB    R0,[R1],#1
        CMP     R0,#&20                                 ; =" "
        MOVLE   R0,#0
        CMP     R0,#&61                                 ; ="a"
        RSBGES  R3,R0,#&7A                              ; ="z"
        SUBGE   R0,R0,#&20                              ; =" "
        LDRB    R2,[R8],#1
        CMP     R2,#&20                                 ; =" "
        MOVLE   R2,#0
        TEQLE   R0,R2
        BEQ     skip_3
        CMP     R2,#&61                                 ; ="a"
        RSBGES  R3,R2,#&7A                              ; ="z"
        SUBGE   R2,R2,#&20                              ; =" "
        TEQ     R0,R2
        BEQ     loop
        SUB     R1,R1,#1
        Pull    "R8"
        B       code_1
skip_3
        Pull    "R8"
loop_3
        MOV     R3,PC                                   ; Any non zero
        MOV     PC,R14
skip_5
        MOV     R0,#0
        SWI     XOS_ReadUnsigned
        MOVVS   PC,R14
        LDRB    R0,[R8,#0]
        TEQ     R0,R2
        BEQ     loop_3
        LDRB    R0,[R8,#1]
        TEQ     R0,R2
        BEQ     loop_3
code_1
        LDRB    R0,[R1],#1
        CMP     R0,#' '
        BGT     code_1
        SUB     R1,R1,#1
        B       loop_8

        DCB     "Users", 9, "0.00/0059 (25 Jan 1988) assembled at 16:35:18.", 0
        ALIGN

        END

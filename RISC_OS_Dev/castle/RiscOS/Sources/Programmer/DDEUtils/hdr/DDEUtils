; This source code in this file is licensed to You by Castle Technology
; Limited ("Castle") and its licensors on contractual terms and conditions
; ("Licence") which entitle you freely to modify and/or to distribute this
; source code subject to Your compliance with the terms of the Licence.
;
; This source code has been made available to You without any warranties
; whatsoever. Consequently, Your use, modification and distribution of this
; source code is entirely at Your own risk and neither Castle, its licensors
; nor any other person who has contributed to this source code shall be
; liable to You for any loss or damage which You may suffer as a result of
; Your use, modification or distribution of this source code.
;
; Full details of Your rights and obligations are set out in the Licence.
; You should have received a copy of the Licence with this source code file.
; If You have not received a copy, the text of the Licence is available
; online at www.castle-technology.co.uk/riscosbaselicence.htm
;
        SUBT    Exported DDEUtils constants

OldOpt  SETA   {OPT}
        OPT    OptNoList+OptNoP1List

SWIClass        SETS    DDEUtilsSWI_Name

        ^       DDEUtilsSWI_Base

        AddSWI  Prefix
        AddSWI  SetCLSize
        AddSWI  SetCL
        AddSWI  GetCLSize
        AddSWI  GetCl
        AddSWI  ThrowbackRegister
        AddSWI  ThrowbackUnRegister
        AddSWI  ThrowbackStart
        AddSWI  ThrowbackSent
        AddSWI  ThrowbackEnd
        AddSWI  ReadPrefix
        AddSWI  FlushCL

Throwback_ReasonProcessing   * 0
Throwback_ReasonErrorDetails * 1
Throwback_ReasonInfoDetails  * 2

        OPT OldOpt


        MACRO
        DebugReg $reg, $str
    [ Debug
     Push "$reg"
     [ "$str" <> ""
        BL      DebugHALPrint
        =       "$str", 0
        ALIGN
     ]
     bl  DebugHALPrintReg
    ]
        MEND

        MACRO
        DebugRegNCR $reg, $str
    [ Debug
     Push "$reg"
     [ "$str" <> ""
        BL      DebugHALPrint
        =       "$str", 0
        ALIGN
     ]
     bl  DebugHALPrintRegNCR
    ]
        MEND

        MACRO
        DebugByteReg $reg, $str
    [ Debug
     Push "$reg"
     [ "$str" <> ""
        BL      DebugHALPrint
        =       "$str", 0
        ALIGN
     ]
     bl  DebugHALPrintB
    ]
        MEND

        MACRO
        DebugTX $str
    [ Debug
        BL      DebugHALPrint
        =       "$str", 13,10,00
        ALIGN
    ]
        MEND

        MACRO
        DebugTXS $str
    [ Debug
        BL      DebugHALPrint
        =       "$str",00
        ALIGN
    ]
        MEND

        MACRO
        DebugTX01 $src, $str
    [ Debug
        ASSERT  "$src"<>"r0"
        Push    "r0, $src, lr"
        BL      DebugHALPrint
        =       "$str",00
        TEQ     $src, #0
        BNE     %ft0111
        BL      DebugHALPrint
        =       "null pointer ",00
        B       %ft0112
0111    LDRB    r0, [$src], #1
        CMP     r0, #' '
        blgt    DebugTX
        CMP     r0, #' '
        BGT     %BT0111
0112    BL      DebugHALPrint
        =       10,13,00
        ALIGN
        Pull    "r0, $src, lr"
    ]
        MEND

        END

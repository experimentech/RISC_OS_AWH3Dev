; This source code in this file is licensed to You by Castle Technology
; Limited ("Castle") and its licensors on contractual terms and conditions
; ("Licence") which entitle you freely to modify and/or to distribute this
; source code subject to Your compliance with the terms of the Licence.
; 
; This source code has been made available to You without any warranties
; whatsoever. Consequently, Your use, modification and distribution of this
; source code is entirely at Your own risk and neither Castle, its licensors
; nor any other person who has contributed to this source code shall be
; liable to You for any loss or damage which You may suffer as a result of
; Your use, modification or distribution of this source code.
; 
; Full details of Your rights and obligations are set out in the Licence.
; You should have received a copy of the Licence with this source code file.
; If You have not received a copy, the text of the Licence is available
; online at www.castle-technology.co.uk/riscosbaselicence.htm
; 
        SUBT    Specific definition of IOC ==> Hdr:IO.IOC

OldOpt  SETA    {OPT}
        OPT     OptNoList+OptNoP1List

; ***********************************
; ***    C h a n g e   L i s t    ***
; ***********************************
;
; Date       Name          Description
; ----       ----          -----------
; 04-Jan-93  BCockburn     Created from Hdr:System
; 13-Jul-93  JRoach        Moved the generic stuff to Hdr:IO.GenericIOC
;
; This defines the registers specific to 86C410 implmementations of IOC.
; This chip is more often referred to as IOC.
;

 [ :LNOT: :DEF: IOC_HDR_INCLUDED
        GBLL    IOC_HDR_INCLUDED

        ; IOC register offsets

Timer2LL        EQU     &60             ; Timer 2 Write low input latch
Timer2LH        EQU     &64             ;         Write high input latch
Timer2GO        EQU     &68             ;         Load count from input latch
Timer2CL        EQU     &60             ;         Read low output latch
Timer2CH        EQU     &64             ;         Read high output latch
Timer2LR        EQU     &6C             ;         Load output latch from count

Timer3LL        EQU     &70             ; Timer 3 Write low input latch
Timer3LH        EQU     &74             ;         Write high input latch
Timer3GO        EQU     &78             ;         Load count from input latch
Timer3CL        EQU     &70             ;         Read low output latch
Timer3CH        EQU     &74             ;         Read high output latch
Timer3LR        EQU     &7C             ;         Load output latch from count

        ; IOC register addresses

                ^       IOC
                #       &60

IOC_Timer2LL    #       &00             ; Timer 2 Write low input latch
IOC_Timer2CL    #       &04             ;         Read low output latch
IOC_Timer2LH    #       &00             ;         Write high input latch
IOC_Timer2CH    #       &04             ;         Read high output latch
IOC_Timer2GO    #       &04             ;         Load count from input latch
IOC_Timer2LR    #       &04             ;         Load output latch from count

IOC_Timer3LL    #       &00             ; Timer 3 Write low input latch
IOC_Timer3CL    #       &04             ;         Read low output latch
IOC_Timer3LH    #       &00             ;         Write high input latch
IOC_Timer3CH    #       &04             ;         Read high output latch
IOC_Timer3GO    #       &04             ;         Load count from input latch
IOC_Timer3LR    #       &04             ;         Load output latch from count

IOEB_LatchB         * &03350018 ; Fast, Bank 5
LatchB              * &03350018 ; Fast, Bank 5
VIDCClockSelect * &03350048     ; bits 0 and 1 control speed, as follows:-
                                ; 0 => 24 MHz
                                ; 1 => 25.175 MHz
                                ; 2 => 36 MHz
                                ; 3 => do not use
IOEB_MonitorType    * &03350070
 ]

        OPT     OldOpt
        END

; This source code in this file is licensed to You by Castle Technology
; Limited ("Castle") and its licensors on contractual terms and conditions
; ("Licence") which entitle you freely to modify and/or to distribute this
; source code subject to Your compliance with the terms of the Licence.
; 
; This source code has been made available to You without any warranties
; whatsoever. Consequently, Your use, modification and distribution of this
; source code is entirely at Your own risk and neither Castle, its licensors
; nor any other person who has contributed to this source code shall be
; liable to You for any loss or damage which You may suffer as a result of
; Your use, modification or distribution of this source code.
; 
; Full details of Your rights and obligations are set out in the Licence.
; You should have received a copy of the Licence with this source code file.
; If You have not received a copy, the text of the Licence is available
; online at www.castle-technology.co.uk/riscosbaselicence.htm
; 
; This header file is autogenerated from the files maintained by the
; RISC OS allocations manager and should not be edited by anyone else.

        SUBT    Definitions of currently allocated OSWord reason Codes

OldOpt  SETA    {OPT}
        OPT     OptNoList+OptNoP1List

                                ^       0

OsWord_ReadLine                 #       1       ; &00 BBC MOS
OsWord_ReadSystemClock          #       1       ; &01 BBC MOS
OsWord_WriteSystemClock         #       1       ; &02 BBC MOS
OsWord_ReadIntervalTimer        #       1       ; &03 BBC MOS
OsWord_WriteIntervalTimer       #       1       ; &04 BBC MOS
OsWord_ReadIOProcessorMemory    #       1       ; &05 BBC MOS
OsWord_WriteIOProcessorMemory   #       1       ; &06 BBC MOS
OsWord_GenerateSound            #       1       ; &07 BBC MOS
OsWord_DefineSoundEnvelope      #       1       ; &08 BBC MOS
OsWord_ReadPixelColour          #       1       ; &09 BBC MOS
OsWord_ReadCharacterDefinition  #       1       ; &0A BBC MOS
OsWord_ReadPalette              #       1       ; &0B BBC MOS
OsWord_WritePalette             #       1       ; &0C BBC MOS
OsWord_ReadGraphicsPositions    #       1       ; &0D BBC MOS
OsWord_ReadRealTimeClock        #       1       ; &0E Master MOS
OWReadRTC_String                      * 0
OWReadRTC_BCD                         * 1
OWReadRTC_BCDToString                 * 2
OWReadRTC_5ByteInt                    * 3
OsWord_WriteRealTimeClock       #       1       ; &0F Master MOS
OWWriteRTC_5ByteInt                   * 5
OWWriteRTC_TimeOnly                   * 8
OWWriteRTC_DateOnly                   * 15
OWWriteRTC_TimeDate                   * 24
OsWord_Econet_Transmit          #       1       ; &10 NFS and ANFS
OsWord_Econet_Receive           #       1       ; &11 NFS and ANFS
OsWord_Econet_ReadArguments     #       1       ; &12 NFS and ANFS
OsWord_Econet_ReadAndSetMisc    #       1       ; &13 NFS and ANFS
OsWord_Econet_DoFSOp            #       1       ; &14 NFS and ANFS
OsWord_DefinePointerAndMouse    #       1       ; &15 RISC OS Kernel
OWPointerAndMouse_SetPointerShape     * 0
OWPointerAndMouse_SetBoundingBox      * 1
OWPointerAndMouse_SetMouseFactors     * 2
OWPointerAndMouse_SetMousePos         * 3
OWPointerAndMouse_UnbufferedMousePos  * 4
OWPointerAndMouse_SetPointerPos       * 5
OWPointerAndMouse_ReadPointerPos      * 6
OsWord_WriteScreenBaseAddress   #       1       ; &16 RISC OS Kernel
OWWriteScreenBaseAddress_VDU          * 0
OWWriteScreenBaseAddress_Hardware     * 1

        ; Note that the size of blocks below &20 is determined by a
        ; table in the MOS.  Blocks between &20 and &7F will be treated
        ; as 16 bytes in and 16 bytes out (for Tube® transfers) and must
        ; not excede these values.

                                ^       &42
OsWord_DFS_SRAMTransfer         #       1       ; &42 1770 DFS
OsWord_DFS_SRAMLoadOrSave       #       1       ; &43 1770 DFS

                                ^       &60
OsWord_VFS_ReadSequenceNumber   #       1       ; &60 Master VFS (Domesday)
OsWord_VFS_UnAllocated          #       1       ; &61 Master VFS (Domesday)
OsWord_VFS_DoCommand            #       1       ; &62 Master VFS (Domesday)
OsWord_VFS_ReadLastErrorInfo    #       1       ; &63 Master VFS (Domesday)
OsWord_VFS_ReadCurrentFCode     #       1       ; &64 Master VFS (Domesday)

                                ^       &70

OsWord_ADFS_ReadSequenceNumber  #       1       ; &70 BBC/Master ADFS
OsWord_ADFS_ReadFreeSpace       #       1       ; &71 BBC/Master ADFS
OsWord_ADFS_DoCommand           #       1       ; &72 BBC/Master ADFS
OsWord_ADFS_ReadLastErrorInfo   #       1       ; &73 BBC/Master ADFS

                                ^       &7A

OsWord_TeleText                 #       1       ; &7A BBC/Master Teletext ROM
OsWord_Modem                    #       1       ; &7B Prestel etc.

                                ^       &7D

OsWord_DFS_ReadSequenceNumber   #       1       ; &7D BBC/Master DFS
OsWord_DFS_ReadDiscSize         #       1       ; &7E BBC/Master DFS
OsWord_DFS_DoCommand            #       1       ; &7F BBC/Master DFS

        ; Note that for blocks in the range &80 to &FF the sizes for
        ; incoming and outgoing parameter lists are the first and
        ; second bytes respectively (for Tube® transfers).

OsWord_IEEE_DoCommand           #       1       ; &80

                                ^       &90

OsWord_TransportService         #       1       ; &90 Acorn X25 Gateway

                                ^       &A0

OsWord_IsolatedWordREcogniser   #       1       ; &A0


                                ^       &E0

OsWord_User_01                  #       1       ; &E0 Ends up on UserV
OsWord_User_02                  #       1       ; &E1 Ends up on UserV
OsWord_User_03                  #       1       ; &E2 Ends up on UserV
OsWord_User_04                  #       1       ; &E3 Ends up on UserV
OsWord_User_05                  #       1       ; &E4 Ends up on UserV
OsWord_User_06                  #       1       ; &E5 Ends up on UserV
OsWord_User_07                  #       1       ; &E6 Ends up on UserV
OsWord_User_08                  #       1       ; &E7 Ends up on UserV
OsWord_User_09                  #       1       ; &E8 Ends up on UserV
OsWord_User_10                  #       1       ; &E9 Ends up on UserV
OsWord_User_11                  #       1       ; &EA Ends up on UserV
OsWord_User_12                  #       1       ; &EB Ends up on UserV
OsWord_User_13                  #       1       ; &EC Ends up on UserV
OsWord_User_14                  #       1       ; &ED Ends up on UserV
OsWord_User_15                  #       1       ; &EE Ends up on UserV
OsWord_User_16                  #       1       ; &EF Ends up on UserV
OsWord_User_17                  #       1       ; &F0 Ends up on UserV
OsWord_User_18                  #       1       ; &F1 Ends up on UserV
OsWord_User_19                  #       1       ; &F2 Ends up on UserV
OsWord_User_20                  #       1       ; &F3 Ends up on UserV
OsWord_User_21                  #       1       ; &F4 Ends up on UserV
OsWord_User_22                  #       1       ; &F5 Ends up on UserV
OsWord_User_23                  #       1       ; &F6 Ends up on UserV
OsWord_User_24                  #       1       ; &F7 Ends up on UserV
OsWord_User_25                  #       1       ; &F8 Ends up on UserV
OsWord_User_26                  #       1       ; &F9 Ends up on UserV
OsWord_User_27                  #       1       ; &FA Ends up on UserV
OsWord_User_28                  #       1       ; &FB Ends up on UserV
OsWord_User_29                  #       1       ; &FC Ends up on UserV
OsWord_User_30                  #       1       ; &FD Ends up on UserV
OsWord_Z80_Disc                 #       1       ; &FE
OsWord_Z80_Data                 #       1       ; &FF



        OPT OldOpt

        END

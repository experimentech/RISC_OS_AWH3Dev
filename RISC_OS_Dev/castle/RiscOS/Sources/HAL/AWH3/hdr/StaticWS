; This source code in this file is licensed to You by Castle Technology
; Limited ("Castle") and its licensors on contractual terms and conditions
; ("Licence") which entitle you freely to modify and/or to distribute this
; source code subject to Your compliance with the terms of the Licence.
;
; This source code has been made available to You without any warranties
; whatsoever. Consequently, Your use, modification and distribution of this
; source code is entirely at Your own risk and neither Castle, its licensors
; nor any other person who has contributed to this source code shall be
; liable to You for any loss or damage which You may suffer as a result of
; Your use, modification or distribution of this source code.
;
; Full details of Your rights and obligations are set out in the Licence.
; You should have received a copy of the Licence with this source code file.
; If You have not received a copy, the text of the Licence is available
; online at www.castle-technology.co.uk/riscosbaselicence.htm


        [       :LNOT: :DEF: __HAL_STATICWS_HDR__
        GBLL    __HAL_STATICWS_HDR__

;Do I really have to do this?
     GET    Hdr:VideoDevice
     GET    hdr.VideoiMx6

sb                      RN      9
                        ^       0, sb
;OSEntries breaks hdr2h.
OSentries               #       4*(HighestOSEntry+1)
;OSentries               #       32
;  ASSERT ?OSentries = 4*(HighestOSEntry+1)

IO_BaseAddr             #       4
SRAM_A1_BaseAddr        #       4
SRAM_A2_BaseAddr        #       4
SRAM_C_BaseAddr         #       4

VRAM_BaseAddr           #       4

CPUCFG_BaseAddr         #       4

;Aliases for minimal cross platform file editing.
MPU_INTC_Log            #       0
SCU_Log                 #       0
SCU_BaseAddr            #       4

PIO_BaseAddr            #       4
R_PIO_BaseAddr		#       4 ;CPU port L

USB_Host_BaseAddr       #       4
USB_OTG_BaseAddr        #       4

IRQDi_Log               #       0 ;for iMx6 compat.
GIC_DISTBaseAddr        #       4

IRQC_Log                #       0 ; Interrupt controller logical address
GIC_CPUIFBaseAddr       #       4

TIMER_Log               #       4 ; TIMER &01C20C00
HS_TMR_Log              #       4 ; High speed timer &01C60000

NCNBWorkspace           #       4
NCNBAllocNext           #       4

CCU_BaseAddr            #       4

MMC_BaseAddr            #       4

OSheader                #       4




HDMI_BaseAddr           #       4

;clipped from iMx6
VideoDevice     #       Video_DeviceSize
 [ VideoInHAL
PointerPhys     #       4 ; Phys addr of pointer image
PointerLog      #       4 ; Log addr of pointer image
PointerPal      #       16 ; Pointer palette
PointerX        #       4 ; Pointer delta values - offset of image within buffer
PointerY        #       4
PointerPalDirty #       1 ; Nonzero if pointer palette has changed
PointerDisabled #       1 ; Nonzero if pointer is disabled
                #       2
 ]
IPU1_Log        #       4 ;  can probably be deleted again.
IPU2_Log        #       4 ;

;end iMx6

DebugUART               #       4 ; Physical address of debug UART
;HALUART                #       4*4 ; Physical addresses of UARTs, in HAL API order
HALUART                 #       0 ;Deprecated. Remove from code.
HALUART_Log             #       0 ;logical address base for UART pointers
UART_0_Log              #       4
UART_1_Log              #       4
UART_2_Log              #       4
UART_3_Log              #       4

HALUARTIRQ              #       4 ; 4 bytes of IRQ numbers for HAL UARTs
DefaultUART             #       1 ; Default UART index
NumUART                 #       1 ; Number of UARTs to expose via HAL

padding                 #       2 ; just to keep alignment.

SimulatedCMOS           #       2048+4  ;Usual 2k plus version word (as appended by *SaveCMOS)

HAL_WsSize              *       :INDEX:@
sizeof_workspace        *       :INDEX:@


        ] ; __HAL_STATICWS_HDR__

    END


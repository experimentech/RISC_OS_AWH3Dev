; This source code in this file is licensed to You by Castle Technology
; Limited ("Castle") and its licensors on contractual terms and conditions
; ("Licence") which entitle you freely to modify and/or to distribute this
; source code subject to Your compliance with the terms of the Licence.
;
; This source code has been made available to You without any warranties
; whatsoever. Consequently, Your use, modification and distribution of this
; source code is entirely at Your own risk and neither Castle, its licensors
; nor any other person who has contributed to this source code shall be
; liable to You for any loss or damage which You may suffer as a result of
; Your use, modification or distribution of this source code.
;
; Full details of Your rights and obligations are set out in the Licence.
; You should have received a copy of the Licence with this source code file.
; If You have not received a copy, the text of the Licence is available
; online at www.castle-technology.co.uk/riscosbaselicence.htm
;

        [       :LNOT: :DEF: __VideoHDR__
        GBLL    __VideoHDR__

; HDMI Transmitter encoder formats

; hdmi_datamap values
HDMI_RGB444_8B    * 0x01
HDMI_RGB444_10B   * 0x03
HDMI_RGB444_12B   * 0x05
HDMI_RGB444_16B   * 0x07
HDMI_YCbCr444_8B  * 0x09
HDMI_YCbCr444_10B * 0x0B
HDMI_YCbCr444_12B * 0x0D
HDMI_YCbCr444_16B * 0x0F
HDMI_YCbCr422_8B  * 0x16
HDMI_YCbCr422_10B * 0x14
HDMI_YCbCr422_12B * 0x12

; HDMI CSC encode format
; hdmi_csc_enc_format values
HDMI_eRGB      * 0x0
HDMI_eYCC444   * 0x1
HDMI_eYCC422   * 0x2
HDMI_eExtended * 0x3

; HDMI colorimetry defined by ITU
; hdmi_colorimetry values
HDMI_eITU601    * 0x0
HDMI_eITU709    * 0x1

; default IPU clock, derived from mmdc_ch0 clock
IPU_DEFAULT_WORK_CLOCK * 264000000
; max IPU external clock rate
IPU_MAX_EXT_CLOCK * 240000000
; Cut-off for switching between internal and external clock - halfway between max external clock and the next internal clock value
; 264*16/&10 = 264MHz internal clock
; 264*16/&11 = ~248MHz internal clock
; 264*16/&12 = ~235MHz internal clock
; &11 is highest useful divider, so cutoff is (240+264*16/&11)/2 = 244235294Hz
IPU_EXT_CLOCK_CUTOFF * 244235294

; PLL5 min & max values, reference clock
PLL5_MIN * 650000000
PLL5_MAX * 1300000000
PLL5_REF * 24000000

; DI counter allocation (they start from 0!)
InternalHSYNCCntr   	*	1
OutputHSYNCCntr	   	*	2
OutputVSYNCCntr	  	*	3
ActiveLineCntr	    	*	4
ActivePixelCntr   	*	5





; Hardware cursor size limits
HW_CURSOR_WIDTH         * 32
HW_CURSOR_HEIGHT        * 32
HW_CURSOR_WIDTH_POW2    * 5

; -----------------------------------------------------------------------------------

; VIDCList3 is terminated by a -1 word
; so min length of a vidc3 list...
VIDCList3_Size			*	4+VIDCList3_ControlList-VIDCList3_Type

MaxPermittedPixelKHz		*	270000 	; max permitted pixel rate

        ] ; __VideoHDR__

        END
